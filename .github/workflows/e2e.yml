name: 🎭 Playwright E2E tests
on:
  deployment_status:

permissions:
  actions: write
  contents: read

jobs:
  e2e:
    # https://vercel.com/guides/how-can-i-run-end-to-end-tests-after-my-vercel-preview-deployment
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success'

    name: Run e2e tests
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Environment URL
        run: echo "Vercel preview URL - ${{github.event.deployment_status.environment_url}}"

      - uses: actions/checkout@v4
        name: 🛎️ Checkout repository

      - uses: pnpm/action-setup@v3
        name: 📦 Setup pnpm
        with:
          version: 8

      - uses: actions/setup-node@v4
        name: 📚 Setup Node.js
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: 🚚 Install dependencies
        run: pnpm install

      # https://argos-ci.com/blog/speed-up-playwright
      # Run npm ci and get Playwright version
      - name: 🚚 Prepare Playwright env
        shell: bash
        run: |
          PLAYWRIGHT_VERSION=$(pnpm ls --json @playwright/test | jq --raw-output '.[].devDependencies["@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      # Cache browser binaries, cache key is based on Playwright version and OS
      - name: 📦 Cache Playwright browser binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: "~/.cache/ms-playwright"
          key: "${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}"
          restore-keys: |
            ${{ runner.os }}-playwright-

      # Install browser binaries & OS dependencies if cache missed
      - name: 📦 Install Playwright browser binaries & OS dependencies (Cache missed)
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          echo "Cache hit - ${{ steps.playwright-cache.outputs.cache-hit }}"
          pnpm exec playwright install --with-deps chromium

      # Install only the OS dependencies if cache hit
      - name: 📦 Install Playwright OS dependencies (Cache hit)
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        shell: bash
        run: |
          pnpm exec playwright install-deps chromium

      - name: 🎭 Run Playwright tests
        run: pnpm exec playwright test
        env:
          BASE_URL: ${{ github.event.deployment_status.environment_url }}

      - uses: actions/upload-artifact@v4
        name: 🎲 Upload Playwright report
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 15
